package fr.galettedebroons.view;

import java.awt.event.ActionEvent;
import java.sql.Date;
import java.util.List;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFrame;

import fr.galettedebroons.domain.Produit;
import fr.galettedebroons.domain.Profil;
import fr.galettedebroons.domain.Tournee;
import fr.galettedebroons.model.RecuperationDonnees;
import fr.galettedebroons.model.selectBase.RecupProduit;
import fr.galettedebroons.model.selectBase.RecupTournee;
import fr.galettedebroons.main.Main;

/*
 * NouveauClient.java
 *
 * Created on 16 mars 2015, 16:18:47
 */

/**
 *
 * @author poher
 */
public class VuePrevision2 extends javax.swing.JPanel {
	
    public VuePrevision2(Main main) {
    	rt_ = new RecupTournee(main_);
    	rp_ = new RecupProduit(main_);
    	rd_ = new RecuperationDonnees(main_);
    	this.main_ = main;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

    	//jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        
        //recuperation tournee
        listeTournee_ = rt_.listTournee();
        String[] tournee = new String[listeTournee_.size()];
        tournee[0] = "Tous";
        int i = 1;
        for (Tournee t : listeTournee_){
        	tournee[i] = t.getNom();
        	i++;
        }
        
        jComboBox1 = new JComboBox(tournee);
        jComboBox1.addActionListener(new java.awt.event.ActionListener(){
        	public void actionPerformed(java.awt.event.ActionEvent evt) {
        		actionSelectionTournee(evt);
			}
        });
        
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selectionner une tournée"}));
        
        jTable1.setAutoCreateColumnsFromModel(false);
        
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Prévision");
        
        jLabel2.setText("Tournée");

        jLabel3.setText("Profil");

        jLabel4.setText("Date");
        
        jLabel5.setText("Prévision + Marge de reprise/Marge de rupture");

        jScrollPane2.setViewportView(jTable2);

        jButton1.setText("Prévision");
        jButton1.addActionListener(new java.awt.event.ActionListener(){
        	public void actionPerformed(java.awt.event.ActionEvent evt) {
        		affichagePrevision(evt);
			}
        });
        
        jButton2.setText("Qté Totale produit");
        jButton2.addActionListener(new java.awt.event.ActionListener(){
        	public void actionPerformed(java.awt.event.ActionEvent evt) {
        		affichageTotaux(evt);
			}
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)
                            .addComponent(jLabel1))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton1)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>
    
    private String selectionTournee(){
    	return jComboBox1.getSelectedItem().toString();
    }
    
    private String selectionProfil(){
    	return jComboBox2.getSelectedItem().toString();
    }

    private Date selectionDate(){
    	return new Date(jDateChooser1.getDate().getTime());
    }
    
    private void actionSelectionTournee(ActionEvent evt){
    	String tournee = selectionTournee();
    	
    	if (!tournee.contains("Tous")){
	    	listClient_ = rt_.recuperationProfilTournee(tournee);
	    	
	    	String[] code_client = new String[listClient_.size()+1];
	        code_client[0] = "Tous";
	        int indice = 1;
	        for (Profil cl : listClient_){
	            code_client[indice] = cl.getCode_client();
	            indice++;
	        }
	        
	    	jComboBox2.removeAllItems();
	    	DefaultComboBoxModel model = new DefaultComboBoxModel(code_client);
	    	jComboBox2.setModel(model);
    	}
    }
    
    private void affichagePrevision(ActionEvent evt){
    	//Definition de la taille du tableau
    	Object[][] data = definitionTailleTableau();
    	titre_ = new String[data.length];
    	
    	
    	
    	if (selectionTournee().contains("Tous")){
    		remplissageEnteteMultiple(titre_);
    		remplissageTableauMultiple(data);
    	}
    	else{
    		remplissageEnteteSimple(titre_);
    		remplissageTableauSimple(data);
    	}
    }
    
    private void remplissageEnteteSimple(String[] titre) {
    	titre[0] = "";
    	int indice = 1;
    	for (Produit produit : listeProduit_){
    		titre[indice] = produit.getCode_produit();
    		indice++;
    	}
    	titre[indice] = "Total";
	}

	private void remplissageTableauSimple(Object[][] data) {
    	int ligne = 0;
    	int colonne = 0;
    	
    	for (Profil profil : listClient_){
    		colonne = 0;
    		data[ligne][colonne] = profil.getCode_client();
    		colonne ++;
    		
    		//récupération de la liste des previsions
    		List<Object[]> maliste = rd_.recupuniqueProfil(selectionDate(), profil.getCode_client());
    		
    		//On parcourt les colonnes et on insert
    		for (int i = 1; i<titre_.length-1 ; i++){
    			boolean trouve = false;
    			for (Object[] p : maliste){
    				if(titre_[i].equals(p[2])){
    					data[ligne][colonne] = p[0]; // +margelivraison
    					trouve = true;
    				}
    			}
    			if (!trouve)
    				data[ligne][colonne] = 0;
    			
    			colonne ++;
    		}
    		
    		ligne ++;
    	}
	}

	private void remplissageEnteteMultiple(String[] titre) {
		titre[0] = titre[1] = "";
    	int indice = 2;
    	for (Produit produit : listeProduit_){
    		titre[indice] = produit.getCode_produit();
    		indice++;
    	}
    	titre[indice] = "Total";
	}

	private void remplissageTableauMultiple(Object[][] data) {
		int ligne = 0;
    	int colonne = 0;
    	
    	for (Tournee t : listeTournee_){
    		colonne = 0;
    		data[ligne][colonne] = t.getNom();
    		colonne ++;
    		ligne ++;
    		
    		//Recuperation des profils de la tournee
    		List<Profil> lp = rt_.recuperationProfilTournee(t.getNom());
	    	for (Profil profil : lp){
	    		colonne = 1;
	    		data[ligne][colonne] = profil.getCode_client();
	    		colonne ++;
	    		
	    		//récupération de la liste des previsions
	    		List<Object[]> maliste = rd_.recupuniqueProfil(selectionDate(), profil.getCode_client());
	    		
	    		//On parcourt les colonnes et on insert
	    		for (int i = 1; i<titre_.length-1 ; i++){
	    			boolean trouve = false;
	    			for (Object[] p : maliste){
	    				if(titre_[i].equals(p[2])){
	    					data[ligne][colonne] = p[0]; // +margelivraison
	    					trouve = true;
	    				}
	    			}
	    			if (!trouve)
	    				data[ligne][colonne] = 0;
	    			
	    			colonne ++;
	    		}
	    		
	    		ligne ++;
	    	}
    	}
	}

	private Object[][] definitionTailleTableau(){
    	int horizonProduit = 0;
    	int vertiProfil = 0;
    	
    	//recuperation du nombre de profil
    	if(selectionTournee().contains("Tous"))
    		vertiProfil = 0; //nb tournee + nb profil par tournee
    	else if(selectionProfil().contains("Tous"))
    		vertiProfil = listClient_.size()+1;
    	else
    		vertiProfil = 1;
    	
    	//recuperation des produits
    	listeProduit_ = rp_.listTousProduit();
    	if(selectionTournee().contains("Tous"))
    		horizonProduit = listeProduit_.size() + 3;
    	else
    		horizonProduit = listeProduit_.size() + 2;
    	
    	return new Object[vertiProfil][horizonProduit];
    }
    
	/**
     * Affichage d'un panel avec la quantité totale des produits
     * @param evt
     */
    private void affichageTotaux(ActionEvent evt) {
    	QteALivrerTotal qteaLivrer = new fr.galettedebroons.view.QteALivrerTotal(main_);
    	JFrame fenetre = new JFrame();
    	fenetre.setSize(500, 500);
    	fenetre.add(qteaLivrer);
    	fenetre.setVisible(true);
    }
	
    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;

	private Main main_;
    private RecupTournee rt_;
    private RecupProduit rp_;
    private RecuperationDonnees rd_;
    private List<Tournee> listeTournee_;
    private List<Profil> listClient_;
    private List<Produit>  listeProduit_;
    private String[] titre_;
    /*private String[] listProfilEditable;
    
    private String[] title;*/
}
